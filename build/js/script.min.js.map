{"version":3,"sources":["script.js"],"names":["promise","Promise","resolve","reject","setTimeout","then","result","alert","error"],"mappings":";;AAAA;AACA,IAAIA,OAAO,GAAG,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAE7CC,EAAAA,UAAU,CAAC,YAAM;AACf;AACAF,IAAAA,OAAO,CAAC,QAAD,CAAP;AACD,GAHS,EAGP,IAHO,CAAV;AAKD,CAPa,CAAd,C,CASA;;AACAF,OAAO,CACJK,IADH,CAEI,UAAAC,MAAM,EAAI;AACR;AACAC,EAAAA,KAAK,CAAC,gBAAgBD,MAAjB,CAAL,CAFQ,CAEuB;AAChC,CALL,EAMI,UAAAE,KAAK,EAAI;AACP;AACAD,EAAAA,KAAK,CAAC,eAAeC,KAAhB,CAAL,CAFO,CAEsB;AAC9B,CATL","sourcesContent":["// Создаётся объект promise\nlet promise = new Promise((resolve, reject) => {\n\n  setTimeout(() => {\n    // переведёт промис в состояние fulfilled с результатом \"result\"\n    resolve(\"result\");\n  }, 1000);\n\n});\n\n// promise.then навешивает обработчики на успешный результат или ошибку\npromise\n  .then(\n    result => {\n      // первая функция-обработчик - запустится при вызове resolve\n      alert(\"Fulfilled: \" + result); // result - аргумент resolve\n    },\n    error => {\n      // вторая функция - запустится при вызове reject\n      alert(\"Rejected: \" + error); // error - аргумент reject\n    }\n  );\n\n"],"file":"script.min.js"}